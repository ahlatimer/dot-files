set -g default-terminal "xterm-256color"
set-window-option -g mode-keys vi
set-option -g default-command "reattach-to-user-namespace -l zsh"

# vim-like copy/paste
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer

# Use vim keybindings in copy mode
setw -g mode-keys vi
#
# Vim copy mode
bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down
unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# Temp fix for El Cap notifyd issues (https://github.com/tmux/tmux/issues/108)
# set -g status-interval 0

set -g escape-time 20

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

set -g pane-border-fg colour250
set -g pane-border-bg default
set -g pane-active-border-bg default
set -g pane-active-border-fg colour240
set -g status-bg colour0
set -g status-fg white

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
